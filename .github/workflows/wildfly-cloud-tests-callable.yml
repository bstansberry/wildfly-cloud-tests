name: WildFly Cloud Tests Internal

on:
  workflow_call:
    inputs:
      runtimeImage:
        description: 'Name/tag of the base runtime image'
        type: string
        required: false
      base64EncodedEnvVars:
        # We are doing this because there is a max of 10 inputs on GH Actions
        description: 'Env vars (one per line) encoded with base64'
        type: string
        required: false

jobs:
  build:
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Set runtime image override variable
        if: ${{inputs.runtimeImage}}
        run: |
          # Set the system property to choose a different image when running the tests
          echo Overriding the runtime image to be: ${{inputs.runtimeImage}}
          TMP="-Dimage.name.wildfly.runtime=${{inputs.runtimeImage}}"
          echo "RUNTIME_IMAGE_OVERRIDE=${TMP}" >> $GITHUB_ENV

      - name: Unencode env vars for the tests
        if: ${{inputs.base64EncodedEnvVars}}
        run: |
          echo "Decoding base64 encoded env vars"
          echo ${{inputs.base64EncodedEnvVars}} > encodedVars.txt
          base64 --decode encodedVars.txt > envVars.env
          while IFS= read -r line; do
            echo "$line" >> $GITHUB_ENV
          done < envVars.env

      ########################################################################################
      # Use this step to read environment variables required for your manual test, and set
      # an env var to trigger a later step to run the test, as well as any env vars for
      # maven options etc.
      - name: Check which manual jobs to run and set env vars
        run: |
          # RHOSAK_PARAMETERS
          if [ -v KAFKA_HOST ]; then
            if [ -v RHOAS_CLIENT_ID ]; then
              if [ -v RHOAS_CLIENT_SECRET ]; then
                TMP="-Pmanual-rhosak -pl tests/manual/rhosak -Dwildfly.cloud.test.manual.rhoas.kafka.host=$KAFKA_HOST -Dwildfly.cloud.test.manual.rhoas.client.id=$RHOAS_CLIENT_ID -Dwildfly.cloud.test.manual.rhoas.client.secret=$RHOAS_CLIENT_SECRET"
                echo "RHOSAK_PARAMETERS=${TMP}" >> $GITHUB_ENV
              fi
            fi
          fi
      

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout WildFly
        uses: actions/checkout@v2
        with:
          path: wildfly
          fetch-depth: 1
          repository: 'wildfly/wildfly'

      - name: Setup Java JDK
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Checkout WildFly Cloud Tests
        uses: actions/checkout@v2
        with:
          path: cloud-tests
          fetch-depth: 1

      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Build WildFly
        run: mvn -B install -DskipTests -Dskip.preview
        working-directory: wildfly

      - name: Grab WildFly Version
        id: grab-version
        run: |
          mvn -B help:evaluate -Dexpression=project.version -pl .
          TMP="$(mvn -B help:evaluate -Dexpression=project.version -pl . | grep -v '^\[')"
          echo "version: ${TMP}"
          echo "VERSION_WILDFLY=${TMP}" >> $GITHUB_ENV
        working-directory: wildfly

      - name: Start minikube
        id: minikube
        with:
          driver: docker
          container-runtime: containerd
          cpus: 2
          memory: 4000m
          cni: bridge
        uses: medyagh/setup-minikube@master

      - name: Enable minikube registry
        run: |
          minikube addons enable registry
          kubectl port-forward --namespace kube-system service/registry 5000:80 &

      - name: Run Cloud Tests
        # This builds the provisioned images and runs the main (i.e. non-manual) tests
        # Since the manual tests reuse these images, we don't need to use
        # ${RUNTIME_IMAGE_OVERRIDE} elsewhere.
        run: |
          echo "Runtime image override: ${RUNTIME_IMAGE_OVERRIDE}"
          mvn -B install -Pimages -Dversion.wildfly=${VERSION_WILDFLY} ${RUNTIME_IMAGE_OVERRIDE}
        working-directory: cloud-tests

      - name: Run RHOSAK Tests
        if: ${{env.RHOSAK_PARAMETERS}}
        working-directory: cloud-tests
        run: |
          mvn -B install -Dversion.wildfly=${VERSION_WILDFLY} ${RHOSAK_PARAMETERS}
